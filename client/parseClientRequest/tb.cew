#================================================================--
# Design Unit  : cew testbench for client parameter parsing
#
# File Name    : tb.cew
#
# Purpose      : unit testing
#
# Note         :
#
# Limitations  :
#
# Errors       : none known
#
# Modules      : parseClientRequest::parse
#
# Dependences  : cew
#
# Author       : Justin Waterhouse, Vancouver Island University
#
# System       : Perl (Linux)
#
#------------------------------------------------------------------
# Revision List
# Version      Author  Date    Changes
# 1.0          JW      Oct 28  New version
#================================================================--

$SIG{__DIE__} =sub { };

include(../../lib/cew/bin/cew.pl)

$|=1;

use lib '../';
use lib '../../lib';

use strict;
use warnings;
use Try::Tiny;
use parseClientRequest::parse;
use exc::exception;



#Create a test file for the module testing
open(my $newfile, ">","underFive.dat");
   print $newfile "foo\n";
close($newfile);

#Create a test file for the module testing
open($newfile, ">","Five.dat");
   print $newfile "foo\n";
close($newfile);

#Create a test file for the module testing with file size over 5mb
my $fileSize = 0;
open($newfile, ">","overFive.dat");
   while($fileSize < 5*(1024)*(1024))
   {
      $fileSize = -s "overFive.dat";
      print $newfile "foo\n";
   }
close($newfile);


my $userRequest = parseClientRequest::parse->new();

cew_Variables
#############
# N-CASES
#############


#Valid Entry - Alpha Alpha
cew_Ncase($userRequest->parseString("-u User -p Password -uf underFive.dat"),$userRequest->UserName,'User',ne)

#Valid Entry - Alpha Alpha
cew_Ncase($userRequest->parseString("-u User -p Password -df underFive.dat"),$userRequest->UserName,'User',ne)

#Valid Entry - Alpha AlphaNum
$userRequest = parseClientRequest::parse->new();
cew_Ncase($userRequest->parseString("-u User -p P4ssw0rd -uf underFive.dat"),$userRequest->UserName,'User',ne)

#Valid Entry - AlphaNum Alpha
$userRequest = parseClientRequest::parse->new();
cew_Ncase($userRequest->parseString("-u Us3r -p Password -uf underFive.dat"),$userRequest->Request,'UPLOAD',ne)

#Valid Entry - AlphaNum Alpha
$userRequest = parseClientRequest::parse->new();
cew_Ncase($userRequest->parseString("-u Us3r -p P4ssw0rd -uf underFive.dat"),$userRequest->Password,'P4ssw0rd',ne)

#Valid Entry - Duplicate Switch
$userRequest = parseClientRequest::parse->new();
cew_Ncase($userRequest->parseString("-u Us3r -p P4ssw0rd -uf Five.dat -uf underFive.dat"),$userRequest->FileName,'underFive.dat',ne)


#############
# E-CASES
#############



#Invalid Number of Parameters
cew_Ecase($userRequest->parseString("-u foo"), "too_few_arguments")

#Missing File Upload/Download Switch and Token
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd"), "too_few_arguments")

#Invalid User Name
cew_Ecase($userRequest->parseString("-u fo+o -p P4ssw0rd -uf underFive.dat"), "invalid_user_name")

#Missing switch
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd foo"), "invalid_password")

#Invalid Password
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd+ -uf underFive.dat"), "invalid_password")

#Invalid Switch
cew_Ecase($userRequest->parseString("-u foo -g P4ssw0rd -uf underFive.dat"), "invalid_switch")

#missing switch data
cew_Ecase($userRequest->parseString("-u foo -p -uf underFive.dat"), "missing_switch_data")

#Missing Token for switch
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd -uf"), "missing_switch_data")

#Check for non existant file
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd -uf nonExistant"), "file_does_not_exist")

#Check for a file over 5MB
cew_Ecase($userRequest->parseString("-u foo -p P4ssw0rd -uf overFive.dat"), "file_too_large")


#Remove module test file
unlink "Five.dat" if -e "Five.dat";
unlink "underFive.dat" if -e "underFive.dat";
unlink "overFive.dat" if -e "overFive.dat";

cew_Summary
