#================================================================--
# Design Unit  : cew testbench for stack
#
# File Name    : tb.cew
#
# Purpose      : unit testing
#
# Note         :
#
# Limitations  :
#
# Errors       : none known
#
# Modules      : storage::storage
#
# Dependences  : cew
#
# Author       : Baleze Danoit, Vancouver Island University
#
# System       : Perl (Linux)
#
#------------------------------------------------------------------
# Revision List
# Version      Author  Date    Changes
# 1.0          BD      Oct 22  New version
#================================================================--

$|=1;
use strict;
use warnings;

$SIG{__DIE__} = sub{ };
#$SIG{__WARN__} = sub{ };

include(../../lib/cew/bin/cew.pl)

use lib '../';use lib '../../lib';

use strict;
use warnings;
use Try::Tiny;
use storage::storage;
use exc::exception;



my @users;
my @passwords;
my @test_passwords;
my $count;
my $testuser = "TestUser";
my $db = storage::storage->new();


cew_Variables

#Check for invalid user name
cew_Ecase($db->addUser($testuser.'@'), "invalid_user_name")

#Make sure duplicate users are not allowed
cew_Ecase($db->addUser($testuser);$db->addUser($testuser), "column id is not unique")

#Make sure newly added user exists
cew_Ncase(,$db->userExists($testuser),1,!=);

#define test passwords
@test_passwords = ("pimp","shizzle","barmitzvah");

#Add some passwords to non existant user
cew_Ecase($db->addPasswordsByUser($testuser.'1234', \@test_passwords), "foreign key constraint failed")

#Add some passwords to test user
undef @passwords;
cew_Ncase($db->addPasswordsByUser($testuser, \@test_passwords),$db->passwordsByUser($testuser, \@passwords),3,!=);

#Make sure one of newly added passwords exists
cew_Ncase(,$db->passwordByUserExists($testuser, $test_passwords[2]),1,!=);

#Add an invalid password to test user
@test_passwords = ("pimp@");
cew_Ecase($db->addPasswordsByUser($testuser, \@test_passwords),"invalid_password")

#Remove a password and make sure count is set to 2
undef @passwords;
cew_Ncase($db->deletePasswordByUser($testuser, 'barmitzvah'),$db->passwordsByUser($testuser, \@passwords),2,!=);

#Remove all passwords and make sure count is set to 2
undef @passwords;
cew_Ncase($db->deletePasswordsByUser($testuser),$db->passwordsByUser($testuser, \@passwords),0,!=);

#Add a password and delete user, make sure no passwords remain for user
@test_passwords = ("peeyump");
undef @passwords;
cew_Ncase($db->addPasswordsByUser($testuser, \@test_passwords);$db->deleteUser($testuser),$db->passwordsByUser($testuser, \@passwords),0,!=);
   
cew_Summary
